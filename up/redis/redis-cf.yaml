AWSTemplateFormatVersion: '2010-09-09'
Description: Up-Bot Redis cluster
Parameters:
  CacheNodeType:
    Default: cache.t2.micro
    Description: Redis cluster node instance type (default cache.t2.micro)
    Type: String
  NumNodeGroups:
    Default: '1'
    Description: Number of Redis shards (default 1)
    Type: Number
  ReplicasPerNodeGroup:
    Default: '0'
    Description: Number of read replicas for the cluster (default 0)
    Type: Number
  SubnetIds:
    Description: Subnets for Redis cluster
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Description: The VPC for the Redis cluster
    Type: AWS::EC2::VPC::Id

Resources:
  CacheReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      AutoMinorVersionUpgrade: 'false'
      AutomaticFailoverEnabled: 'true'
      CacheNodeType: !Ref CacheNodeType
      CacheParameterGroupName: default.redis3.2.cluster.on
      CacheSubnetGroupName: !Ref RedisSubnetGroup
      Engine: redis
      EngineVersion: 3.2.4
      NumNodeGroups: !Ref NumNodeGroups
      Port: '6379'
      PreferredMaintenanceWindow: Sun:09:00-Sun:10:00
      ReplicasPerNodeGroup: !Ref ReplicasPerNodeGroup
      ReplicationGroupDescription: !Sub "${AWS::StackName} redis cluster"
      SecurityGroupIds:
      - !Ref RedisSecurityGroup
  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Redis instances
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '6379'
        IpProtocol: tcp
        ToPort: '6379'
      VpcId: !Ref VpcId
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: !Sub "${AWS::StackName} redis subnet group"
      SubnetIds: !Ref SubnetIds

Outputs:
  CacheReplicationGroupConfigurationEndpoint:
    Description: Redis configuration endpoint
    Value:
      Fn::GetAtt:
      - CacheReplicationGroup
      - ConfigurationEndPoint.Address

